{
  "_args": [
    [
      {
        "raw": "react-grid-gallery",
        "scope": null,
        "escapedName": "react-grid-gallery",
        "name": "react-grid-gallery",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\Daria\\Desktop\\Projekt"
    ]
  ],
  "_from": "react-grid-gallery@latest",
  "_id": "react-grid-gallery@0.4.0",
  "_inCache": true,
  "_location": "/react-grid-gallery",
  "_nodeVersion": "4.2.6",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-grid-gallery-0.4.0.tgz_1498699183140_0.693708005361259"
  },
  "_npmUser": {
    "name": "benhowell",
    "email": "bjhowell@gmail.com"
  },
  "_npmVersion": "3.10.7",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-grid-gallery",
    "scope": null,
    "escapedName": "react-grid-gallery",
    "name": "react-grid-gallery",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-grid-gallery/-/react-grid-gallery-0.4.0.tgz",
  "_shasum": "5018e705bfb0327d9d0d6e13a63e5744a4b808ff",
  "_shrinkwrap": null,
  "_spec": "react-grid-gallery",
  "_where": "C:\\Users\\Daria\\Desktop\\Projekt",
  "author": {
    "name": "Ben Howell"
  },
  "bugs": {
    "url": "https://github.com/benhowell/react-grid-gallery/issues"
  },
  "dependencies": {
    "react-images": "^0.5.4"
  },
  "description": "Justified gallery component for React.",
  "devDependencies": {
    "babel-cli": "^6.24.1",
    "babel-plugin-transform-es2015-modules-commonjs": "^6.24.1",
    "babel-preset-es2015": "^6.24.1",
    "babel-preset-react": "^6.24.1",
    "babelify": "^7.3.0",
    "browserify": "^14.3.0",
    "gulp": "^3.9.1",
    "gulp-babel": "^6.1.2",
    "gulp-beautify": "^2.0.0",
    "gulp-clean": "^0.3.2",
    "gulp-gh-pages": "^0.5.4",
    "gulp-if": "^2.0.1",
    "gulp-uglify": "^2.0.0",
    "prop-types": "^15.5.8",
    "react": "^15.5.4",
    "react-dom": "^15.5.4",
    "run-sequence": "^1.2.2",
    "vinyl-buffer": "^1.0.0",
    "vinyl-source-stream": "^1.1.0",
    "watchify": "^3.7.0"
  },
  "directories": {},
  "dist": {
    "shasum": "5018e705bfb0327d9d0d6e13a63e5744a4b808ff",
    "tarball": "https://registry.npmjs.org/react-grid-gallery/-/react-grid-gallery-0.4.0.tgz"
  },
  "gitHead": "bc5b9207ba61c49db2725a4f5604f3692919c8e1",
  "homepage": "https://benhowell.github.io/react-grid-gallery/",
  "keywords": [
    "react",
    "react-component",
    "lightbox",
    "image",
    "images",
    "photo",
    "photos",
    "gallery",
    "select",
    "selectable",
    "justified",
    "tags",
    "tagging",
    "image gallery",
    "photo gallery"
  ],
  "license": "MIT",
  "main": "lib/Gallery.js",
  "maintainers": [
    {
      "name": "benhowell",
      "email": "bjhowell@gmail.com"
    }
  ],
  "name": "react-grid-gallery",
  "optionalDependencies": {},
  "readme": "# React Grid Gallery\n\nJustified image gallery component for [React](http://facebook.github.io/react/) inspired by [Google Photos](https://photos.google.com/) and based upon [React Images](https://github.com/jossmac/react-images).\n\n## Live Demo & Examples\n\nhttps://benhowell.github.io/react-grid-gallery/\n* [Main Demo](https://benhowell.github.io/react-grid-gallery/#demo)\n* [Pre-selected Images](https://benhowell.github.io/react-grid-gallery/#pre-selected-images)\n* [Permanently Selected Images](https://benhowell.github.io/react-grid-gallery/#permanently-selected-images)\n* [Simple Gallery](https://benhowell.github.io/react-grid-gallery/#simple-gallery)\n* [Custom Overlay](https://benhowell.github.io/react-grid-gallery/#custom-overlay)\n\n## Installation\n\nUsing [npm](https://www.npmjs.com/):\n\n    npm install --save react-grid-gallery\n\n## Quick (and dirty) Start\n\n```jsx\nimport React from 'react';\nimport { render } from 'react-dom';\nimport Gallery from 'react-grid-gallery';\n\nconst IMAGES =\n[{\n        src: \"https://c2.staticflickr.com/9/8817/28973449265_07e3aa5d2e_b.jpg\",\n        thumbnail: \"https://c2.staticflickr.com/9/8817/28973449265_07e3aa5d2e_n.jpg\",\n        thumbnailWidth: 320,\n        thumbnailHeight: 174,\n        isSelected: true,\n        caption: \"After Rain (Jeshu John - designerspics.com)\"\n},\n{\n        src: \"https://c2.staticflickr.com/9/8356/28897120681_3b2c0f43e0_b.jpg\",\n        thumbnail: \"https://c2.staticflickr.com/9/8356/28897120681_3b2c0f43e0_n.jpg\",\n        thumbnailWidth: 320,\n        thumbnailHeight: 212,\n        tags: [{value: \"Ocean\", title: \"Ocean\"}, {value: \"People\", title: \"People\"}],\n        caption: \"Boats (Jeshu John - designerspics.com)\"\n},\n\n{\n        src: \"https://c4.staticflickr.com/9/8887/28897124891_98c4fdd82b_b.jpg\",\n        thumbnail: \"https://c4.staticflickr.com/9/8887/28897124891_98c4fdd82b_n.jpg\",\n        thumbnailWidth: 320,\n        thumbnailHeight: 212\n}]\n\nrender(\n        <Gallery images={IMAGES}/>,     \n        document.getElementById('example-0')\n);\n```\n\n## Image Options\n\nProperty\t|\tType\t\t|\tDefault\t\t|\tDescription\n:-----------------------|:--------------|:--------------|:--------------------------------\nsrc                     | string        | undefined     | Required. A string referring to any valid image resource (file, url, etc).\nthumbnail               | string        | undefined     | Required. A string referring to any valid image resource (file, url, etc).\nthumbnailWidth          | number        | undefined     | Required. Width of the thumbnail image.\nthumbnailHeight         | number        | undefined     | Required. Height of the thumbnail image.\ntags                    | array         | undefined     | Optional. An array of objects containing tag attributes (value and title). e.g. `{value: \"foo\", title: \"bar\"}`\nisSelected              | bool          | undefined     | Optional. The selected state of the image.\ncaption                 | string        | undefined     | Optional. Image caption.\nsrcset \t                | array         | undefined \t| Optional. Array of srcsets for lightbox.\ncustomOverlay           | element       | undefined     | Optional. A custom element to be rendered as a thumbnail overlay on hover.\n\n## Gallery Options\n\nProperty\t|\tType\t\t|\tDefault\t\t|\tDescription\n:-----------------------|:--------------|:--------------|:--------------------------------\nimages                  | array         | undefined     | Required. An array of objects containing image properties (see Image Options above).\nenableImageSelection    | bool          | true          | Optional. Allow images to be selectable. Setting this option to `false` whilst supplying images with `isSelected: true` will result in those images being permanently selected.\nonSelectImage           | func          | undefined     | Optional. Function to execute when an image is selected. Access to image object using `this` (See [Programmers notes](#programmers-notes) for more info about implicit `this`). Optional args: index (index of selected image in images array), image (the selected image). This function is only executable when `enableImageSelection: true`. \nrowHeight               | number        | 180           | Optional. The height of each row in the gallery.\nmaxRows                 | number        | undefined     | Optional. The maximum number of rows to show in the gallery.\nmargin                  | number        | 2             | Optional. The margin around each image in the gallery.\nenableLightbox          | bool          | true          | Optional. Enable lightbox display of full size image when thumbnail clicked.\nonClickThumbnail        | func          | openLightbox  | Optional. Function to execute when gallery thumbnail clicked. Allows access to thumbnail using `this` (See [Programmers notes](#programmers-notes) for more info about implicit `this`). Optional args: index (index of selected image in images array), event (the click event). Overrides openLightbox.\nlightboxWillOpen        | func          | undefined     | Optional. Function to be called before opening lightbox. Allows access to gallery using `this` (See [Programmers notes](#programmers-notes) for more info about implicit `this`). Optional arg: index (index of selected image in images array).\nlightboxWillClose       | func          | undefined     | Optional. Function to be called before closing lightbox. Allows access to gallery using `this` (See [Programmers notes](#programmers-notes) for more info about implicit `this`).\ntagStyle \t        | object \t| tagStyle \t| Optional. Style to pass to tag elements. Overrides internal tag style.\ntileViewportStyle \t| func \t        | tileViewportStyle | Optional. Function to style the image tile viewport. Allows access to image tile viewport using `this` (See [Programmers notes](#programmers-notes) for more info about implicit `this`). Overrides internal tileViewportStyle function.\nthumbnailStyle \t        | func \t        | thumbnailStyle | Optional. Function to style the image thumbnail. Allows access to thumbnail using `this` (See [Programmers notes](#programmers-notes) for more info about implicit `this`). Overrides internal thumbnailStyle function.\n\n## Lightbox Options\nNOTE: these options are passed inside the Gallery tag.\n\ne.g.\n```js\n<Gallery images={IMAGES} backdropClosesModal={true}/>\n```\n\nProperty\t|\tType\t\t|\tDefault\t\t|\tDescription\n:-----------------------|:--------------|:--------------|:--------------------------------\nbackdropClosesModal\t| bool          | false\t        | Optional. Allow users to exit the lightbox by clicking the backdrop.\ncurrentImage            | number        | 0             | Optional. The index of the image to display initially (only relevant when used in conjunction with `isOpen: true` property).\npreloadNextImage        | bool          | true          | Optional. Based on the direction the user is navigating, preload the next available image.\ncustomControls          | array         | undefined     | Optional. An array of elements to display as custom controls on the top of lightbox.\nenableKeyboardInput     | bool          | true          | Optional. Supports keyboard input - <code>esc</code>, <code>arrow left</code>, and <code>arrow right</code>.\nimageCountSeparator     | string        | ' of '        | Optional. Customize separator in the image count.\nisOpen                  | bool          | false         | Optional. Whether or not the lightbox is displayed when gallery first rendered (can be used in conjunction with `currentImage` property, otherwise the first image will be diplayed).\nshowCloseButton         | bool          | true          | Optional. Display a close \"X\" button in top right corner.\nshowImageCount          | bool          | true          | Optional. Display image index, e.g., \"3 of 20\".\nonClickImage            | func          | onClickImage  | Optional. Function to execute when lightbox image clicked. Overrides internal implementation of onClickImage.\nonClickPrev             | func          | onClickPrev   | Optional. Function to execute when lightbox left arrow clicked. Overrides internal implementation of onClickPrev.\nonClickNext             | func          | onClickNext   | Optional. Function to execute when lightbox right arrow clicked. Overrides internal implementation of onClickNext.\nshowLightboxThumbnails  | bool          | false         | Optional. Display thumbnails beneath the Lightbox image.\nonClickLightboxThumbnail | func         | gotoImage     | Optional. Function to execute when lightbox thumbnail clicked. Overrides internal function: gotoImage.\nlightboxWidth \t        | number \t| 1024 \t        | Optional. Maximum width of the lightbox carousel; defaults to 1024px.\n\n\n### General Notes\n\n * [react-grid-gallery](https://github.com/benhowell/react-grid-gallery) is built for modern browsers and therefore IE support is limited to IE 11 and newer.\n \n * As the inspiration for this component comes from [Google Photos](https://photos.google.com/), very small thumbnails may not be the most aesthetically pleasing due to the border size applied when selected. A sensible rowHeight default of 180px has been chosen, but rowHeights down to 100px are still reasonable.\n\n * Gallery width is determined by the containing element.\n\n * Image Options: `thumbnail` can point to the same resource as `src`, bearing in mind the resultant data size of the gallery and page load cost. Thumbnails of whatever size will be scaled to match `rowHeight`.\n\n\n### Programmers Notes\n\n * User defined functions that allow access to `this` via [Function.prototype.call()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call) do not require you to pass `this` as a parameter. `this` will be defined at the time the function is called.\n\ne.g.\n```js\n// somewhere in your code...\nfunction myTileViewportStyleFn() {\n  if (this.props.item.isSelected)\n    return {\n           // something stylish...                   \n            };\n}\n\n// internally, within the react-grid-gallery component it will be called like so:\nmyTileViewportStyleFn.call(this); // this now refers to the image to be styled\n\n```\n\n * If you don't know your `thumbnailWidth` and `thumbnailHeight` values, you can find these out using any number of [javascript hacks](http://stackoverflow.com/a/1944298), bearing in mind the load penalty associated with these methods.\n\n\n### License\nReact Grid Gallery is free to use for personal and commercial projects under the [MIT License](https://github.com/benhowell/react-grid-gallery/blob/master/LICENSE). Attribution is not required, but appreciated.\n\n\n### Acknowledgements\n\n * Visual design inspired by [Google Photos](https://photos.google.com/).\n\n * Thumbnail viewport implementation inspired by [GPlusGallery](http://fmaul.de/gallery-grid-example/) by Florian Maul.\n\n * Backend lightbox functionality via [React Images](https://github.com/jossmac/react-images) by [jossmac](https://github.com/jossmac).\n\n * The following gallery functions were obtained from the [React Images example](https://github.com/jossmac/react-images/blob/b85bd83ae651d0fd373bb495ac88670ee4dfadab/examples/src/components/Gallery.js) demo: closeLightbox, gotoNext, gotoPrevious, handleClickImage, openLightbox.\n\n * [cust0dian](https://github.com/cust0dian) for critical bug fixes in [PR 6](https://github.com/benhowell/react-grid-gallery/pull/6) and [PR 7](https://github.com/benhowell/react-grid-gallery/pull/7).\n\n * [ValYouW](https://github.com/ValYouW) for lightboxWillOpen and lightBoxWillClose functionality [PR 20](https://github.com/benhowell/react-grid-gallery/pull/20) and customOverlay option: [PR 22](https://github.com/benhowell/react-grid-gallery/pull/22).\n\n * [danalloway](https://github.com/danalloway) for theme pass-through prop [PR 27](https://github.com/benhowell/react-grid-gallery/pull/27)\n\n \n\n * Demo stock photos:\n   * [Jeshu John - designerspics.com](http://designerspics.com)\n   * [Gratisography](http://gratisography.com)\n   * [Tom Eversley - isorepublic.com](http://isorepublic.com)\n   * [Jan Vasek - jeshoots.com](http://jeshoots.com)\n   * [moveast.me](http://moveast.me)\n   * [贝莉儿 NG. - unsplash.com](http://unsplash.com)\n   * [Matthew Wiebe. - unsplash.com](unsplash.com)\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/benhowell/react-grid-gallery.git"
  },
  "scripts": {},
  "version": "0.4.0"
}
